Многопоточность с помощью модуля Threading:
Для того что бы создать поток нужно:
    1 наследовать от класа Thread
    2 Переопределить метод __ init __ (self [, args])
    3 Переопределить метод run(self [, args]), чтобы создать логику потока
А затем создать новый экземпляр класса


Библиотека предоставляет такие методы:
    run():	Функция точки входа для любого потока.
    start():	запускает поток при вызове метода run.
    join([time]):	позволяет ожидать завершения потоков.
    isAlive():	проверяет активный поток.
    getName():	извлекает имя потока.
    setName():	обновляет имя потока.


Для обработки асинхронных событий можно использовать ThreadPool или ProcessPool. Модуль concurrent.futures предоставляет их реализацию.
Суть в том что б закинуть в очередь задачу а потоки сами возьмут её по готовности




Вот простой код gui:

from tkinter import *


def clicked():
    lbl.configure(text="Я же просил...")


window = Tk()
window.title("Добро пожаловать")
window.geometry('400x400')
lbl = Label(window, text="Привет", font=("Helvetica", 50))
lbl.grid(column=0, row=0)
btn = Button(window, text="Не нажимать!", command=clicked)
btn.grid(column=1, row=0)
window.mainloop()