Вопрос №1: Интерпретатор PyPy языка Python. Ограничения применения.
Вопрос №2: Реализовать двоичное дерево поиска для заданного списка без использования стандартных методов Python.

1. Интерпретатор PyPy языка Python. Ограничения применения.
Интерпретатор, основной целью создания которого была максимальная скорость исполнения кода. 
Реализован как JIT-компилятор, делает сендбоксинг и реализует параллелизм. 
Оптимизация в РуРу за счет типизации создаваемого во время компиляции на ходу машинного кода - таким образом, язык
больше знает о переменных и может выделять адекватное им количество памяти. Конечно, это дает преимущество в памяти,
но основные модификации - в механизме сборки мусора, что дает гораздо больший прирост в скорости за счет того, 
что он часто вызывается. 
Все это вместе дает до х10-х100 ускорение выполнения кода. 

К сожалению, РуРу еще не поддерживает версии 3.х, а сейчас 2020, и 2.х версии официально выходят из поддержки. 
Впрочем, это не худшая его проблема: РуРу не всегда закрывает открытые файлы и в целом требует больше ручного контроля 
за исполненем. 
